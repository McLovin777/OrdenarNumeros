/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

/**
 *
 * @author Cristian
 */
public class Ventana1 extends javax.swing.JFrame {

    /**
     * Creates new form Ventana1
     */
    public Ventana1() {
        initComponents();
        
    }

    public JButton getBotondevolver() {
        return Botondevolver;
    }

    public void setBotondevolver(JButton Botondevolver) {
        this.Botondevolver = Botondevolver;
    }


    public JPanel getjPanel1() {
        return jPanel1;
    }

    public void setjPanel1(JPanel jPanel1) {
        this.jPanel1 = jPanel1;
    }

    public JScrollPane getjScrollPane1() {
        return jScrollPane1;
    }

    public void setjScrollPane1(JScrollPane jScrollPane1) {
        this.jScrollPane1 = jScrollPane1;
    }

    public JTextArea getjTextArea1() {
        return jTextArea1;
    }

    public void setjTextArea1(JTextArea jTextArea1) {
        this.jTextArea1 = jTextArea1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        Botondevolver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("                                                                                                                       ¡Bienvenido al boton ayuda!\n\nA continuación te mostraremos todo el contenido que te puede ser de utilidad para la ejecucion de este software.\n\n\n\t                                                                                                               Funcionalidad\n- La funcion principal del software es tomar un archivo txt con una gran cantidad de números, y ordenarlos todos de \nmayor a menor o de menor a mayor, según las necesidades del usuario.\n- El programa tambien permite guardar los cambios realizados a los archivos txt de forma inmediata.\n\t\n\n                                                                                                              ¿Como elegir el mejor metodo de ordenamiento?\nNo existe EL ALGORITMO PADRE de ordenamiento. Sólo existe el mejor para cada caso particular. Debe conocerse a fondo el problema a resolver, y aplicar el más adecuado. Aunque hay algunas preguntas que pueden ayudar a elegir:\n\n¿Qué grado de orden tendrá la información que va a manejar? Si la información va a estar casi ordenada y no desea complicarse, un algoritmo sencillo como el ordenamiento burbuja será suficiente. Si por el contrario los datos van a estar muy desordenados, un algoritmo poderoso como Quicksort puede ser el más indicado. Y si no puede hacer una presunción sobre el grado de orden de la información, lo mejor será elegir un algoritmo que se comporte de manera similar en cualquiera de estos dos casos extremos.\n\n¿Qué cantidad de datos va a manipular? Si la cantidad es pequeña, no es necesario utilizar un algoritmo complejo, y es preferible uno de fácil implementación. Una cantidad muy grande puede hacer prohibitivo utilizar un algoritmo que requiera de mucha memoria adicional.\n\n¿Qué tipo de datos quiere ordenar? Algunos algoritmos sólo funcionan con un tipo específico de datos (enteros, enteros positivos, etc.) y otros son generales, es decir, aplicables a cualquier tipo de dato.\n\n¿Qué tamaño tienen los registros de la lista? Algunos algoritmos realizan múltiples intercambios (burbuja, inserción). Si los registros son de gran tamaño estos intercambios son más lentos.\n\t\n\t                                                                                                                      Ejecución\n\n\n1) Para ejecutar el programa de forma satisfactoria, debe seleccionar el metodo de ordenamiento deseado.\n2) Para continuar con la ejecución se debe elegir la forma de ordenamiento , si descendente o ascendente.( al final habrá una tabla mostrando las funciones que están disponibles hasta el momento ya que las demás opciones siguen en desarrollo)\n3)  se debe seleccionar el Archivo Txt que se desea ordenar\nADVERTENCIA !!!: el txt que se ingrese debe tener cada numero separado por un ENTER y sin espacios.\n3.1) se desplegará una ventana para buscar el archivo, seleccionar un Txt con los numeros.\n3.2) se desplegará una nota avisando que se debe seleccionar la ruta de guardado del txt nuevo ordenado.\nNota: se debe usar un nombre para el txt nuevo que no esté repetido, ya que habrá problemas de solución en caso de repetirse.\n\n\n                                                                                                                 Metodos desarrollados en el Programa: \n\n                                                                                                                                    Metodo Burbuja :\n                                                                                                 * Mayor a Menor  ✓                             * Menor a Mayor ✓\n                                                                                                                                 Metodo por Selección:\n                                                                                                 * Mayor a Menor  ✘                             * Menor a Mayor ✓\n                                                                                                                                    Metodo Quicksort:\n                                                                                                 * Mayor a Menor  ✓                             * Menor a Mayor ✘\n                                                                                                                                   Metodo Inserción:\n                                                                                                 * Mayor a Menor  ✓                             * Menor a Mayor ✘\n\n           \n\nPrograma de la autoria de: Juan Sebastian Espitia Hernandez, Andres Camilo Gracia Villamizar, Juan Felipe Gordillo Ortiz, Edward Alejandro Becerra Cipagauta.");
        jTextArea1.setToolTipText("");
        jTextArea1.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextArea1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 1030, 350));

        Botondevolver.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Botondevolver.setText("Volver");
        jPanel1.add(Botondevolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 380, 150, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1071, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Botondevolver;
    public javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
